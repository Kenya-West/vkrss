map $arg_vkrss_access_token $access_allowed {
    default 0;
    "${VKRSS_ACCESS_TOKEN}" 1;
}

server {
    listen 80;
    listen [::]:80;
    # TODO
    listen 443 ssl;
    http2 on;
    server_name ${DOMAIN};
    index index.php index.html;
    root /app;

    # Access and error logs.
    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log info;

    # TODO
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Redirect all HTTP traffic to HTTPS.
    # Now disabled for development purposes
    location / {
        return 301 https://$host$request_uri;
    }

    location ~ /.well-known/acme-challenge {
        allow all;
    }

    location ~ ^/${FEED_PATH}/(.+\.php)$ {
        if ($access_allowed = 0) {
            return 403;
        }

        # Remove 'vkrss_access_token' from the query parameters
        if ($args ~* (.*)(^|&|\?)vkrss_access_token=[^&]*(&|$)(.*)) {
            set $args_without_vkrss $1$4;
        }

        # Append 'access_token' to the query parameters
        set $final_args "";
        if ($args_without_vkrss) {
            set $final_args "${args_without_vkrss}&access_token=${VK_ACCESS_TOKEN}";
        }

        if ($args_without_vkrss = "") {
            set $final_args "access_token=${VK_ACCESS_TOKEN}";
        }

        # Properly proxy the request
        rewrite ^/${FEED_PATH}/(.+\.php)$ /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        resolver 127.0.0.11 valid=5s;
        proxy_pass http://php?$final_args;
    }

    location ~ /.ht {
        deny all;
    }
}
